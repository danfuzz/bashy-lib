#!/bin/bash
# Copyright 2022-2024 the Bashy-lib Authors (Dan Bornstein et alia).
# SPDX-License-Identifier: Apache-2.0

[[ "$(readlink -f "$0")" =~ ^(.*/tests/) ]] && . "${BASH_REMATCH[1]}_init.sh" || exit 1


#
# Argument parsing
#

define-usage $'
    ${name} -- test command

    This is a test command.
'

opt-action --var=someAction action
opt-toggle --var=someToggle toggle
opt-value --var=someValue value
opt-multi --var=someMulti multi

opt-alias do-action --action
opt-alias multi-123 --multi[]='one two three'
opt-alias do-toggle --toggle
opt-alias do-notog --no-toggle
opt-alias val-1/v --value=one
opt-alias do-act-tog/t --action --toggle
opt-alias val-z/z --value=zzz
opt-alias do-act-tog-val-2 --value=two --toggle --action
opt-alias do-notog-val-3 --no-toggle --value=3
opt-alias val-multi --value=florp --multi[]='yes no "maybe?"'
opt-alias val-with-spaces --value='this is fun'
opt-alias val-with-specials --value='y$e&s|!'

process-args "$@" || exit "$?"

printf 'action: %q\n' "${someAction}"

if (( ${#someMulti[@]} == 0 )); then
    printf 'multi: ()\n'
else
    printf 'multi: ('
    printf '%q' "${someMulti[0]}"
    unset someMulti[0]
    printf ' %q' "${someMulti[@]}"
    printf ')\n'
fi

printf 'toggle: %q\n' "${someToggle}"
printf 'value: %q\n' "${someValue}"
